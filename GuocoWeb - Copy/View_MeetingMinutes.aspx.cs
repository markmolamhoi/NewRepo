using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using LSLIBWebBased;
using System.Data;

public partial class View_MeetingMinutes : System.Web.UI.Page
{
    protected ClassHashTableHelper ClsHashTableHelper;
    protected ClassFileUploadHelper ClsFileUploadHelper = new ClassFileUploadHelper();

    protected string strEmailIP = System.Configuration.ConfigurationManager.AppSettings["EmailIP"];

    private string msMode
    {
        get
        {
            if (LSLIBWebBased.nsSQL.mSQL.oHandleNullAndNothing(this.Request.QueryString["Mode"]) == "")
            {
                return "";
            }
            else
            {
                return this.Request.QueryString["Mode"];
            }
        }
    }

    protected void Page_Init(object sender, EventArgs e)
    {
        //檢查登入權限+取得翻譯表
        LSLIBWebBased.nsClass.mClass.cPageLoadHelper_GuocoWeb(this, ref ClsHashTableHelper, true, "", "", true);
        this.Title = ClsHashTableHelper.sGetHash("View_Minutes") + " - " + ClsHashTableHelper.sGetHash(ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
        this.ucPageHeader1.msTitle = this.Title;

        LSLIBWebBased.nsClass.mClass.cFileUploadHelper(this, ClsFileUploadHelper, FileUpload1);
                
       // CheckMode();
        //LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);

    }

    protected void Page_Load(object sender, EventArgs e)
    {
        // 為頁面添加不能為空的檢查, 如有ValidationGroup, 就添加檢查功能.
        //this.ClsHashTableHelper.fAddValidator(this);

        if (!IsPostBack)
        {
            txtResponsibleParties.Attributes.Add("MaxLength", txtResponsibleParties.MaxLength.ToString());
            txtFileDesc.Attributes.Add("MaxLength", txtFileDesc.MaxLength.ToString());
            txtDescription.Attributes.Add("MaxLength", txtDescription.MaxLength.ToString());
            txtActionBy.Attributes.Add("MaxLength", txtActionBy.MaxLength.ToString());

            //LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlFolderCode_edit, this.ClsHashTableHelper.mClassMyConfiguration.msSystemCode);

            //LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLParentFolderPath_all", ddlFolderCode_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            //LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLStatus", ddlInfoStatus_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            LIBLocal.BindDDLUserList(ddlChairperson_edit, ClsHashTableHelper.mClassMyConfiguration.msSystemCode, "Minutes_Chairperson", "", "");
            ddlChairperson_edit.Items.Insert(0, "");

            LIBLocal.BindDDLUserList(ddlApprover_edit, ClsHashTableHelper.mClassMyConfiguration.msSystemCode, "Minutes_Approver", "", "");
            ddlApprover_edit.Items.Insert(0, "");

            LIBLocal.BindDDLUserList(ddlPresent_edit, ClsHashTableHelper.mClassMyConfiguration.msSystemCode, "Minutes_Present", "", "");
            LIBLocal.BindDDLUserList(ddlAbsent_edit, ClsHashTableHelper.mClassMyConfiguration.msSystemCode, "Minutes_Absent", "", "");
            LIBLocal.BindDDLUserList(ddlOtherReaders_edit, ClsHashTableHelper.mClassMyConfiguration.msSystemCode, "Minutes_OtherReaders", "", "");

            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLCompanyCode", ddlCompany_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            //BindDDLUserList(ddlProjectManager_edit, ClsHashTableHelper.mClassMyConfiguration.msSystemCode, this.ddlIncidentType_edit.Text);
          
           // LSLIBWebBased.nsCommon.mCommon.BindDDLMaster(this.ddlStatus_edit, "4", LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlFolderCode_edit, this.ClsHashTableHelper.mClassMyConfiguration.msSystemCode);

            LoadMinutes();

           // LSLIBWebBased.nsScript.mScript.RefreshParentPage(this, false);
            
        }
    }

    protected void CheckMode()
    {
        btnUpdate_Info.Visible = false;
        btnSendApproval.Visible = false;
        btnEdit_Info.Visible = false;
        btnApprove.Visible = false;

       if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                                  , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                                  , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                                  , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                                  , "minutes_draft") == true)
        {
            if (msMode == "Edit")
            {
                LSLIBWebBased.nsWebControl.mWebControl.SearchWebControl(this.divPost.Controls, LIBLocal.fSetCoontrolEditMode);
                btnUpdate_Info.Visible = true;
                btnSendApproval.Visible = true;
                //btnEdit_Info.Visible = true;

                div_ErrorAtt.Visible = true;
                div_EditProjectManager.Visible = true;
                div_EditRelatedStaff.Visible = true;
                div_EditOtherReaders.Visible = true;
            }
            else
            {
                btnEdit_Info.Visible = true;

                LSLIBWebBased.nsWebControl.mWebControl.SearchWebControl(this.divPost.Controls, LIBLocal.fSetCoontrolViewMode);
                    
                LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(grdAttachment);
                div_ErrorAtt.Visible = false;

                LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(GridViewPM);
                div_EditProjectManager.Visible = false;

                LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(GridViewRS);
                div_EditRelatedStaff.Visible = false;

                LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(GridViewOR);
                div_EditOtherReaders.Visible = false;
            }
        }
        else
        {
            if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                                , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                                , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                                , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                                , "minutes_approve") == true)
            {
                btnApprove.Visible = true;
            }

            LSLIBWebBased.nsWebControl.mWebControl.SearchWebControl(this.divPost.Controls, LIBLocal.fSetCoontrolViewMode);
                
            LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(grdAttachment);
            div_ErrorAtt.Visible = false;
                
            LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(GridViewPM);
            div_EditProjectManager.Visible = false;

            LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(GridViewRS);
            div_EditRelatedStaff.Visible = false;

            LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(GridViewOR);
            div_EditOtherReaders.Visible = false;
        }
       
    }

    protected void btnEdit_Info_Click(object sender, EventArgs e)
    {
        string lsRedirectURL = "";

        if (lsRedirectURL.Contains("&Mode=Edit") == false)
        {
            lsRedirectURL = HttpContext.Current.Request.Url.ToString() + "&Mode=Edit";
        }
        else
        {
            lsRedirectURL = HttpContext.Current.Request.Url.ToString();
        }

        Response.Redirect(lsRedirectURL);
    }


    protected void LoadMinutes()
    {

        if (ClsHashTableHelper.mClassMyConfiguration.msPostCode != "")
        {
            ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();
            this.lblMeetingID.Text = ClsHashTableHelper.mClassMyConfiguration.msPostCode;

            ClsLoadFieldHelper.fAddSqlParameter("MeetingCode", ClsHashTableHelper.mClassMyConfiguration.msPostCode);
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_LoadMinutes");
                        
            if (ClsLoadFieldHelper.mbDataSetHasRecord)
            {
                ClsLoadFieldHelper.LoadSqlField("System", ref lblSystem);
                ClsLoadFieldHelper.LoadSqlField("MeetingCode", ref lblMeetingID);

                ClsLoadFieldHelper.LoadSqlField("Subject", ref lblSubject_view);
                ClsLoadFieldHelper.LoadSqlField("Folder", ref lblFolderCode_view);
                ClsLoadFieldHelper.LoadSqlField("MeetingDateTime", ref lblDPMeetingDate_view);
                ClsLoadFieldHelper.LoadSqlField("MeetingTime", ref lblMeetingTime_view);

                ClsLoadFieldHelper.LoadSqlField("DivisionCode", ref lblDivision_view);
                ClsLoadFieldHelper.LoadSqlField("CompanyCode", ref lblCompany_view);
                ClsLoadFieldHelper.LoadSqlField("Scope", ref lblScope_view);
                ClsLoadFieldHelper.LoadSqlField("Chairperson", ref lblChairperson_view);
                ClsLoadFieldHelper.LoadSqlField("Approver", ref lblApprover_view);
                ClsLoadFieldHelper.LoadSqlField("Status", ref lblStatus);

                ClsLoadFieldHelper.LoadSqlField("URL", ref lblURL);

                ClsLoadFieldHelper.LoadSqlField("FolderCode", ref ddlFolderCode_edit);
             

               // ddlFolderCode_edit.Text = lblFolderCode_view.Text;
                txtSubject_edit.Text =lblSubject_view.Text;
                txtMeetingTime_edit.Text =lblMeetingTime_view.Text;
                DPMeetingDate_edit.Text = lblDPMeetingDate_view.Text;
                ddlCompany_edit.Text =lblCompany_view.Text;

                Bind_ddlDivisionCode(this.ddlCompany_edit.Text, ddlDivision_edit);
                ddlDivision_edit.Text =lblDivision_view.Text;

                txtScope_edit.Text =lblScope_view.Text;
                ddlChairperson_edit.Text =lblChairperson_view.Text;
                ddlApprover_edit.Text = lblApprover_view.Text;
            }

            FillGridUserList("Present", GridViewPM);
            FillGridUserList("Absent", GridViewRS);
            FillGridUserList("OtherReaders", GridViewOR);
            FillGridAttachment(ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        }
        else
        {
            if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                              , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                              , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                              , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                              , "Create") == true)
            {
                CreateMinutes();
            }
        }

        CheckMode();       

    }


    protected void CreateMinutes()
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("SystemCode", ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
        ClsLoadFieldHelper.fAddSqlParameter("FolderCode", ClsHashTableHelper.mClassMyConfiguration.msFolderCode);
        ClsLoadFieldHelper.fAddSqlParameter("UpdateBy", this.ClsHashTableHelper.msUserName);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_CreateNewMinutes");

        ClsLoadFieldHelper.LoadSqlField("NewCode", ref lblMeetingID);
        ClsLoadFieldHelper.LoadSqlField("error", ref lblerror);

        
        string lsRedirectURL = "";

        if (HttpContext.Current.Request.Url.ToString().Contains("&PostCode=" + lblMeetingID.Text) == false)
        {
            lsRedirectURL = HttpContext.Current.Request.Url.ToString() + "&PostCode=" + lblMeetingID.Text;
        }
        else
        {
            lsRedirectURL = HttpContext.Current.Request.Url.ToString();
        }

        if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                              , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                              , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                              , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                              , "Create") == true && msMode != "Edit")
        {
            lsRedirectURL = lsRedirectURL + "&Mode=Edit";
        }

        Response.Redirect(lsRedirectURL);
    }

    protected void UpdateMinutes(string psMode)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("MeetingCode", this.lblMeetingID.Text);

        ClsLoadFieldHelper.fAddSqlParameter("SystemCode", ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
        ClsLoadFieldHelper.fAddSqlParameter("Subject", this.txtSubject_edit.Text);

        ClsLoadFieldHelper.fAddSqlParameter("CompanyCode", this.ddlCompany_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("DivisionCode", this.ddlDivision_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("FolderCode", this.ddlFolderCode_edit.Text);

        ClsLoadFieldHelper.fAddSqlParameter("MeetingDate", this.DPMeetingDate_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("MeetingTime", this.txtMeetingTime_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("Scope", this.txtScope_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("Chairperson", this.ddlChairperson_edit.Text);

        ClsLoadFieldHelper.fAddSqlParameter("Approver", this.ddlApprover_edit.Text);

        if (psMode != "update" && psMode != "save")
        {
            ClsLoadFieldHelper.fAddSqlParameter("Status", psMode);
        }
        else
        {
            ClsLoadFieldHelper.fAddSqlParameter("Status", this.lblStatus.Text);
        }

        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_update");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert3.Visible = true;
            lblAlert3.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();            
        }
        else
        {
            lblAlert3.Visible = false;

            if (psMode == "update")
            {

                //LSLIBWebBased.nsScript.mScript.RefreshParentPage(this, false);

                string lsRedirectURL = "";

                lsRedirectURL = HttpContext.Current.Request.Url.ToString().Replace("&Mode=Edit", "");

                Response.Redirect(lsRedirectURL);
            }
            else
            {
                LoadMinutes();
            }

            //clearEditFields();
        }
    }


    //public void BindDDLUserList(UserControlLibrary.Lamsoon.SmartDropDownList pDropDownList, string psSystemCode, string psType)
    //{        
    //    LIBLocal.BindDDLUserList(pDropDownList, psSystemCode, psType, this.lblLogID.Text, "");

    //    pDropDownList.Items.Insert(0, "");
    //}

    //public static void BindDDLIncidentTypes(UserControlLibrary.Lamsoon.SmartDropDownList pDropDownList, string psSystemCode)
    //{
    //    ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();
    //    //ClsLoadFieldHelper.fAddSqlParameter("@UserCode", this.ClsHashTableHelper.msUserName);
    //    ClsLoadFieldHelper.fAddSqlParameter("@SystemCode", psSystemCode);
    //    ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_log_IncidentLog_DDLIncidentTypes");
    //    ClsLoadFieldHelper.fBindControls(pDropDownList);

    //    pDropDownList.Items.Insert(0, "");
    //}


    protected void btnUpdate_Info_Click(object sender, EventArgs e)
    {
        UpdateMinutes("update");

        //LSLIBWebBased.nsScript.mScript.Alert(this, "Log updated.", false);
                
    }

    protected void btnSendApproval_Click(object sender, EventArgs e)
    {
        UpdateMinutes("Pending");
                 
        string lsRedirectURL = "";

        if (lblAlert3.Visible == false)
        { 
            lsRedirectURL = HttpContext.Current.Request.Url.ToString().Replace("&Mode=Edit", "");

            //email part
            SendEmail(this.ddlApprover_edit.Text, "Meeting Minutes for Approval", 
                "Subject: " + this.txtSubject_edit.Text
                + "<br><br>Meeting date: " + this.DPMeetingDate_edit.Text + " " + this.txtMeetingTime_edit.Text
                + "<br><br> Link of the meeting minutes: " + lsRedirectURL);

            Response.Redirect(lsRedirectURL);
        }
    }


    protected void btnApprove_Click(object sender, EventArgs e)
    {
        UpdateMinutes("Active");
                 
        string lsRedirectURL = "";

        lsRedirectURL = HttpContext.Current.Request.Url.ToString().Replace("&Mode=Edit", "");

        Response.Redirect(lsRedirectURL);
    }



    protected void ddlCompanyCode_edit_SelectedIndexChanged(object sender, EventArgs e)
    {
        Bind_ddlDivisionCode(this.ddlCompany_edit.Text, ddlDivision_edit);
    }


    private object Bind_ddlDivisionCode(String msCompanyCode, Object objDivisionCode)
    {

        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@lang", this.ClsHashTableHelper.msLang);
        ClsLoadFieldHelper.fAddSqlParameter("@CompanyCode", msCompanyCode);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_DDLDivisionCode", null, "", false);
        ClsLoadFieldHelper.fBindControls(objDivisionCode);

       if (objDivisionCode == ddlDivision_edit)
        {
            ddlDivision_edit.Items.Insert(0, "");
        }

        return null;
    }


    #region "Related Staffs"

    protected void AddRelatedStaffs(string psUserCode, string psRole)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("MeetingCode", this.lblMeetingID.Text);
        ClsLoadFieldHelper.fAddSqlParameter("UserCode", psUserCode);
        ClsLoadFieldHelper.fAddSqlParameter("Role", psRole);
        ClsLoadFieldHelper.fAddSqlParameter("UpdateBy", this.ClsHashTableHelper.msUserName);

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_RelatedStaffs_insert");

    }
    
    private void DeleteRelatedStaffs(string psUserCode, string psRole)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("MeetingCode", this.lblMeetingID.Text);
        ClsLoadFieldHelper.fAddSqlParameter("UserCode", psUserCode);
        ClsLoadFieldHelper.fAddSqlParameter("Role", psRole);
        ClsLoadFieldHelper.fAddSqlParameter("UpdateBy", this.ClsHashTableHelper.msUserName);

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_RelatedStaffs_delete");

    }

    private void FillGridUserList(string psRole, GridView psGridView)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("MeetingCode", this.lblMeetingID.Text);
        ClsLoadFieldHelper.fAddSqlParameter("Role", psRole);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_GridRelatedStaffs");
        ClsLoadFieldHelper.fBindControls(psGridView);
    }


    //Present
    protected void btnAddPresent_Click(object sender, System.EventArgs e)
    {
        AddRelatedStaffs(ddlPresent_edit.Text, "Present");

        FillGridUserList("Present", GridViewPM);
    }

    
    protected void grdPM_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        string lsCommandName = e.CommandName;
        switch (lsCommandName)
        {
            case "Delete1":

                int index1 = Convert.ToInt32(e.CommandArgument);

                Label lLabel_UserCode1 = this.GridViewPM.Rows[index1].FindControl("lblKeyUserCode") as Label;
                string sUserCode1 = lLabel_UserCode1.Text;

                //刪除記錄.
                DeleteRelatedStaffs(sUserCode1, "Present");
                
                // 更新Gridview
                FillGridUserList("Present", GridViewPM);

                break;
        }
    }
       

    protected void grdPM_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        //加上刪除提醒, 和把Row值放到CommandArgument.
        LSLIBWebBased.nsCommon.mCommon.fGridViewSetDeleteReminder(e);

    }

    //Absent
    protected void btnAddAbsent_Click(object sender, System.EventArgs e)
    {
        AddRelatedStaffs(ddlAbsent_edit.Text, "Absent");

        FillGridUserList("Absent", GridViewRS);
    }


    protected void grdRS_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        string lsCommandName = e.CommandName;
        switch (lsCommandName)
        {
            case "Delete1":

                int index1 = Convert.ToInt32(e.CommandArgument);

                Label lLabel_UserCode1 = this.GridViewRS.Rows[index1].FindControl("lblKeyUserCode") as Label;
                string sUserCode1 = lLabel_UserCode1.Text;

                //刪除記錄.
                DeleteRelatedStaffs(sUserCode1, "Absent");

                // 更新Gridview
                FillGridUserList("Absent", GridViewRS);

                break;
        }
    }


    protected void grdRS_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        //加上刪除提醒, 和把Row值放到CommandArgument.
        LSLIBWebBased.nsCommon.mCommon.fGridViewSetDeleteReminder(e);

    }

    //Other Readers
    protected void btnAddOtherReaders_Click(object sender, System.EventArgs e)
    {
        AddRelatedStaffs(ddlOtherReaders_edit.Text, "OtherReaders");

        FillGridUserList("OtherReaders", GridViewOR);
    }


    protected void grdOR_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        string lsCommandName = e.CommandName;
        switch (lsCommandName)
        {
            case "Delete1":

                int index1 = Convert.ToInt32(e.CommandArgument);

                Label lLabel_UserCode1 = this.GridViewOR.Rows[index1].FindControl("lblKeyUserCode") as Label;
                string sUserCode1 = lLabel_UserCode1.Text;

                //刪除記錄.
                DeleteRelatedStaffs(sUserCode1, "OtherReaders");

                // 更新Gridview
                FillGridUserList("OtherReaders", GridViewOR);

                break;
        }
    }


    protected void grdOR_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        //加上刪除提醒, 和把Row值放到CommandArgument.
        LSLIBWebBased.nsCommon.mCommon.fGridViewSetDeleteReminder(e);

    }

    #endregion

    #region "Attachment"
    protected void btnAttachmentAdd_Click(object sender, System.EventArgs e)
    {
        string lsItemNo = this.lblMeetingID.Text;

        UpdateMinutes("save");

        string a;

        a = FileUpload1.FileName;

        if (FileUpload1.FileName == "")
        {
            InsertAttachment("", txtFileDesc.Text, "");
        }
        else
        { 
            //fUpLoadFile = 上載檔案.
            ClsFileUploadHelper.fUpLoadFile(lsItemNo, txtFileDesc, InsertAttachment);
        }

        FillGridAttachment(this.lblMeetingID.Text);
                
        // 更新Gridview, 顯示本申請的附件.
        //  FillGridAttachment(lsItemNo);

    }

    private void InsertAttachment(string psItemID, string psFileDesc, string psFilePath)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@MeetingCode", lblMeetingID.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Item", txtItem.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Description", txtDescription.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@File_Desc", psFileDesc);
        ClsLoadFieldHelper.fAddSqlParameter("@File_Path", psFilePath);
        ClsLoadFieldHelper.fAddSqlParameter("@ActionBy", txtActionBy.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@ResponsibleParties", txtResponsibleParties.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_Attachment_insert");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert5.Visible = true;
            lblAlert5.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {
            lblAlert5.Visible = false;
            txtItem.Text = "";
            FileUpload1.FileName.Equals("");
            txtDescription.Text = "";
            txtActionBy.Text = "";
            txtResponsibleParties.Text = "";
            txtFileDesc.Text = "";
        }
    }

    private void DeleteAttachment(string psItemID, string psSeq_No)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@MeetingCode", lblMeetingID.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Seq_No", psSeq_No);
        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_MeetingMinutes_Attachment_delete");

    }

    // contain demo example
    protected void grdAttachment_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        string lsCommandName = e.CommandName;
        switch (lsCommandName)
        {
            case "Delete1":
                System.Web.UI.WebControls.GridViewRow lGridViewRow = this.grdAttachment.Rows[Int32.Parse(e.CommandArgument.ToString())];
                // todo lesson
                // method 1 - 有control ID時用
                System.Web.UI.WebControls.HyperLink lHyperLink = (System.Web.UI.WebControls.HyperLink)lGridViewRow.FindControl("HyperLink1");
                string lsFilePath = lHyperLink.Text;

                int index1 = Convert.ToInt32(e.CommandArgument);

                Label lLabel_Seq_No = this.grdAttachment.Rows[index1].FindControl("lblSeq_No") as Label;
                string sSeq_No = lLabel_Seq_No.Text;

                // method 2 - 特殊情況時用
                //  Dim lHyperLink As HyperLink = lGridViewRow.Cells(0).Controls(0)

                // method 3 - BoundField 時用
                //Dim lsProductID As String = lGridViewRow.Cells(0).Text

                // Dim lsFilePath As String = lHyperLink.Text

                //刪除數據庫上的檔案記錄.
                DeleteAttachment(this.lblMeetingID.Text, sSeq_No);

                //刪除伺服器上的檔案.
                ClsFileUploadHelper.fRemoveFile(lsFilePath);

                // 更新Gridview, 顯示本申請的附件.
                FillGridAttachment(this.lblMeetingID.Text);

                break;
        }
    }

    private void FillGridAttachment(string psItemID)
    {
        //BindGridViewSinglePara = 一個簡化版本的綁定GridView功能. 如果STP只有1個paramater時, 可以用這個功能.
        LSLIBWebBased.nsDataSet.mDataSet.BindGridViewSinglePara("@MeetingCode", psItemID, "stp_wf_dms_MeetingMinutes_Attachment_Gird", grdAttachment);
    }


    protected void grdAttachment_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        //加上刪除提醒, 和把Row值放到CommandArgument.
        LSLIBWebBased.nsCommon.mCommon.fGridViewSetDeleteReminder(e);
    }
    
    protected string bindGetText(object value)
    {
        if (value == DBNull.Value || value =="")
            return "";
        else
            return "Link";
    }


    protected string SendEmail(string psUser, string psHeader, string psBody)
    {
        //psHeader = "Meeting Minutes"
        //psBody = HttpContext.Current.Request.Url.ToString().Replace("&Mode=Edit", "")

        if (bIsExistsEmail(psUser))
        {
            //send UserEmail
            LIBLocal.SendMailnew(psUser, "", "", psHeader, psBody, "", "", strEmailIP, "", "");
        }
        else
        {
            //send AdministratorEmail
            LIBLocal.SendMailnew(this.ClsHashTableHelper.msUserName, "", "", psHeader, psBody, "", "", strEmailIP, "", "");
        }

        return null;
    }

    public bool bIsExistsEmail(String psUserCode)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();
        ClsLoadFieldHelper.fAddSqlParameter("@username", psUserCode);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_account_bIsExistsEmail");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            return false;
        }
        else
        {
            return true;
        }
    }

    #endregion


 
}



  


    