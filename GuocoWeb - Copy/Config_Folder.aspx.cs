using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using LSLIBWebBased;
using System.Data;


public partial class Config_Folder : System.Web.UI.Page
{
    protected ClassHashTableHelper ClsHashTableHelper;
    protected ClassFileUploadHelper ClsFileUploadHelper = new ClassFileUploadHelper();

    protected void Page_Init(object sender, EventArgs e)
    {
        //檢查登入權限+取得翻譯表
        LSLIBWebBased.nsClass.mClass.cPageLoadHelper_GuocoWeb(this, ref ClsHashTableHelper, true, "", "", true);
        this.Title = ClsHashTableHelper.sGetHash(ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        this.ucPageHeader1.msTitle = this.Title;        
        LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);
       
    }

    protected void Page_Load(object sender, EventArgs e)
    {

        if (!IsPostBack)
        {
            this.divCoverLayer.Visible = false;
            this.divPopUpPanel.Visible = false;
          
            //this.txtSearchKey.Text = lblInvoiceNum.Text;

            //LSLIBWebBased.nsCommon.mCommon.fButtonSetOpenURL(this.btnExcelUpload_header, "ExcelUpload.aspx?UploadType=TAX_ReconciliationTracking_Header");

            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLSystemCode", ddlSystemCode, LSLIBWebBased.LIBWebBased.enDropDownListType.All);

            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLSystemCode", ddlSystemCode_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            if (ClsHashTableHelper.mClassMyConfiguration.msSystemCode != "")
            {
                ddlSystemCode.SelectedValue = ClsHashTableHelper.mClassMyConfiguration.msSystemCode;
                ddlSystemCode_edit.SelectedValue = ClsHashTableHelper.mClassMyConfiguration.msSystemCode;
                ddlSystemCode.Mode = LSLIBWebBased.nsWorkFlow.mWorkFlow.Action.Display;
                ddlSystemCode_edit.Mode = LSLIBWebBased.nsWorkFlow.mWorkFlow.Action.Display;
            }
            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlParentFolderCode, this.ddlSystemCode.SelectedValue);
            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlParentFolderCode_edit, this.ddlSystemCode_edit.SelectedValue);

            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLStatus", ddlInfoStatus_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            CheckMode();

            FillGridView1(); 
        }
    }

    protected void CheckMode()
    {
        if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                              , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                              , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                              , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                              , "Create") == true)
        {
            btnInsert.Visible = true;
        }
        else
        {
            btnInsert.Visible = false;
        }
    }
    
    private object FillGridView1()
    {

        LSLIBWebBased.ClassLoadFieldHelper ClsLoadFieldHelper = new LSLIBWebBased.ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@ParentFolderCode", this.ddlParentFolderCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@SystemCode", this.ddlSystemCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Search", this.txtSearchKey.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@action", "Search");
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_Folder_GridDetail");
        ClsLoadFieldHelper.fBindControls(GridView1);
        
        this.lblCountLabel1.Text = (string)ClsLoadFieldHelper.iRowCountDesc();

        LIBLocal.SetViewSQLScript(ClsLoadFieldHelper, this.ClsHashTableHelper, "N", lblPrintSql);
        return null;
    }
    
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        lblParentFolderCode.Text = this.ddlParentFolderCode.Text;
        lblSearch.Text = this.txtSearchKey.Text;

        FillGridView1();
    }

    protected void GridView1_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                              , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                              , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                              , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                              , "Create") == true)
        {
            
        }
        else
        {
            TableCell cell = e.Row.Cells[0];
            e.Row.Cells.RemoveAt(0);
        }

        //foreach (GridViewRow row in GridView1.Rows)
        //{
        //    //Button lbtnMarkCloseInfo = (Button)row.FindControl("btnMarkCloseInfo");
        //    //lbtnMarkCloseInfo.OnClientClick = "return confirm('" + ClsHashTableHelper.sGetHash("Are you sure to mark close?") + "');";

        //    Button lbtnResetPassword = (Button)row.FindControl("btnResetPassword");
        //    lbtnResetPassword.OnClientClick = "return confirm('" + ClsHashTableHelper.sGetHash("Are you sure to reset user password?") + "');";

        //    //Button lbtnSendPassword = (Button)row.FindControl("btnSendPassword");
        //    //lbtnSendPassword.OnClientClick = "return confirm('" + ClsHashTableHelper.sGetHash("Are you sure to send user password?") + "');";
        //}
    }

   
    protected void GridView1_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        switch (e.CommandName)
        {

            case "Edit1":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;                                    

                     Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                     string sKey_Edit1 = lLabel_Edit1.Text;

                     //if (bCanHaveRight(sKey_Edit1, "Edit"))
                    {
                      this.Label6.Text = "Edit Folder";
                      this.btnUpdate_Info.Text = "Edit";
                     // this.lblAction.Text = "Update";
                      this.divCoverLayer.Visible = true;
                      this.divPopUpPanel.Visible = true;
                      this.div_ProfileStatus_edit.Visible = true;
                     //this.btnGetNewField_Type.Visible = false;

                     //Label lLabel2_Edit1 = this.GridView1.Rows[index1].FindControl("lblKeyCustomerCompany_Header") as Label;
                     //string sCustomerCompany_Edit1 = lLabel2_Edit1.Text;

                     ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                     ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                     ClsLoadFieldHelper.fAddSqlParameter("@action", "Get");
                     ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_Folder_GridDetail");

                     this.txtFolderCode.Text = sKey_Edit1;
                     this.txtFolderCode.Enabled = false;
                     ClsLoadFieldHelper.LoadSqlField("FolderShortName", ref  txtFolderShortName);
                     ClsLoadFieldHelper.LoadSqlField("FolderFullName", ref  txtFolderFullName);
                     ClsLoadFieldHelper.LoadSqlField("ParentFolderCode", ref  ddlParentFolderCode_edit);
                     ClsLoadFieldHelper.LoadSqlField("SystemCode", ref  ddlSystemCode_edit);
                     ClsLoadFieldHelper.LoadSqlField("Remark", ref  txtRemark);
                     ClsLoadFieldHelper.LoadSqlField("Sorting", ref  txtSorting);
                     ClsLoadFieldHelper.LoadSqlField("Status", ref  ddlInfoStatus_edit);
                    }

                }
                break;
         
        }
    }


    protected void btnClose_Info_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel.Visible = false;
        this.divCoverLayer.Visible = false;
       // FillGridView1();
        clearEditFields();
    }

    protected void btnInsert_AddFolder_Click(object sender, EventArgs e)
    {
        //this.lblAction.Text = "New";
        //this.txtID.Enabled = true;
        //if (bCanHaveRight("", "Add"))
        {
            this.Label6.Text = "Add Folder";
            this.btnUpdate_Info.Text = "Add";         
           // this.txtFolderCode.Enabled = true;
            this.txtFolderCode.Enabled = false;
            this.div_ProfileStatus_edit.Visible = false;
            this.divPopUpPanel.Visible = true;
            this.divCoverLayer.Visible = true;
        }
    }


    protected void btnUpdate_Info_Click(object sender, EventArgs e)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@FolderCode", this.txtFolderCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@FolderShortName ", this.txtFolderShortName.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@FolderFullName", this.txtFolderFullName.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@ParentFolderCode", this.ddlParentFolderCode_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@SystemCode", this.ddlSystemCode_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Remark", this.txtRemark.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Sorting", this.txtSorting.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);


       // if (this.txtFolderCode.Enabled == true)
        if (this.btnUpdate_Info.Text == "Add")
        {
            ClsLoadFieldHelper.fAddSqlParameter("@Status", "Active");
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_Folder_insert");
        }
        else
        {
            ClsLoadFieldHelper.fAddSqlParameter("@Status", this.ddlInfoStatus_edit.Text);
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_Folder_update");
        }

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            //LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            lblAlert3.Visible = true;
            lblAlert3.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {
            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlParentFolderCode, this.ddlSystemCode.SelectedValue);
            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlParentFolderCode_edit, this.ddlSystemCode_edit.SelectedValue);

            if (lblParentFolderCode.Text != "")
            { 
                this.ddlParentFolderCode.Text = lblParentFolderCode.Text;
            }

            FillGridView1();
            this.divPopUpPanel.Visible = false;
            this.divCoverLayer.Visible = false;
            clearEditFields();
        }
    }
    
    
    private object clearEditFields()
    {
        txtFolderCode.Text = "";
        txtFolderShortName.Text = "";
        txtFolderFullName.Text = "";
        txtRemark.Text = "";
        txtSorting.Text = "";
        ddlInfoStatus_edit.Text = "";

        lblAlert3.Visible = false;
        lblAlert3.Text = "";

        return null;
    }

    protected void ddlSystemCode_edit_SelectedIndexChanged(object sender, EventArgs e)
    {
        LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlParentFolderCode_edit, this.ddlSystemCode_edit.SelectedValue);

    }
    protected void ddlSystemCode_SelectedIndexChanged(object sender, EventArgs e)
    {
        LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlParentFolderCode, this.ddlSystemCode.SelectedValue);

    }
}