using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using LSLIBWebBased;
using System.Data;

public partial class View_Post : System.Web.UI.Page
{
    protected ClassHashTableHelper ClsHashTableHelper;
    protected ClassFileUploadHelper ClsFileUploadHelper = new ClassFileUploadHelper();

    private string msMode
    {
        get
        {
            if (LSLIBWebBased.nsSQL.mSQL.oHandleNullAndNothing(this.Request.QueryString["Mode"]) == "")
            {
                return "";
            }
            else
            {
                return this.Request.QueryString["Mode"];
            }
        }
    }

    protected void Page_Init(object sender, EventArgs e)
    {
        //檢查登入權限+取得翻譯表
        LSLIBWebBased.nsClass.mClass.cPageLoadHelper_GuocoWeb(this, ref ClsHashTableHelper, true, "", "", true);
        //this.Title = ClsHashTableHelper.sGetHash("View_Post") + " - " + ClsHashTableHelper.sGetHash(ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        this.Title = ClsHashTableHelper.sGetHash("View_Post");
        this.ucPageHeader1.msTitle = this.Title;

        LSLIBWebBased.nsClass.mClass.cFileUploadHelper(this, ClsFileUploadHelper, FileUpload1);
                
       // CheckMode();
        //LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);

    }

    protected void Page_Load(object sender, EventArgs e)
    {
        

        if (!IsPostBack)
        {
            this.divPopUpPanel.Visible = false;
            this.divCoverLayer.Visible = false;

            txtDistribution_edit.Attributes.Add("MaxLength", txtDistribution_edit.MaxLength.ToString());
            txtDetail_edit.Attributes.Add("MaxLength", txtDetail_edit.MaxLength.ToString());
            txtFileDesc.Attributes.Add("MaxLength", txtFileDesc.MaxLength.ToString());
            txtDescription.Attributes.Add("MaxLength", txtDescription.MaxLength.ToString());
            txtRemark.Attributes.Add("MaxLength", txtRemark.MaxLength.ToString());

            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlFolderCode_edit, this.ClsHashTableHelper.mClassMyConfiguration.msSystemCode);

            //LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLParentFolderPath_all", ddlFolderCode_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

         //   LSLIBWebBased.nsCommon.mCommon.BindDDLMaster(this.ddlInfoStatus_edit, "8", LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            LIBLocal.BindDDLUserList(ddlSuperUser, ClsHashTableHelper.mClassMyConfiguration.msSystemCode, "Post_SuperUser", "","");

            BindDDLOwnerList(ddlOwnerBy, ClsHashTableHelper.mClassMyConfiguration.msSystemCode);

            LoadPost();

           // LSLIBWebBased.nsScript.mScript.RefreshParentPage(this, false);
            
        }
    }

    protected void CheckMode()
    {
        btnClosePost.Visible = false;
        btnAdministrator.Visible = false;
        btnEdit_Info.Visible = false;
        btnUpdate_Info.Visible = false;
        btnPost.Visible = false;
        
        if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                                , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                                , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                                , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                                , "Posting_Update") == true)
        {
            if (msMode == "Edit")
            { 
                LSLIBWebBased.nsWebControl.mWebControl.SearchWebControl(this.divPost.Controls, LIBLocal.fSetCoontrolEditMode);
                btnUpdate_Info.Visible = true;
                div_EditAttachment.Visible = true;
                btnPost.Visible = true;
            }
            else
            {
                btnEdit_Info.Visible = true;

                LSLIBWebBased.nsWebControl.mWebControl.SearchWebControl(this.divPost.Controls, LIBLocal.fSetCoontrolViewMode);
                    
                LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(grdAttachment);
                div_EditAttachment.Visible = false;                    
            }
        }
                  
        else
        {
           if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                                  , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                                  , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                                  , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                                  , "Posting_Pending_Close") == true)
            {
                btnClosePost.Visible = true;
            }

            LSLIBWebBased.nsWebControl.mWebControl.SearchWebControl(this.divPost.Controls, LIBLocal.fSetCoontrolViewMode);
            LSLIBWebBased.nsCommon.mCommon.fGridViewInvisibleDeleteButton(grdAttachment);
            div_EditAttachment.Visible = false;
        }

        if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                                  , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                                  , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                                  , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                                  , "Posting_Administrator") == true
            && msMode != "Edit")
        {
            btnAdministrator.Visible = true;
        }
    }

    protected void btnClosePost_Click(object sender, EventArgs e)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("PostCode", ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        ClsLoadFieldHelper.fAddSqlParameter("Status", "Close");
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_update_byAdmin");

        LoadPost();
    }

    protected void btnUpdate_Administrator_Click(object sender, EventArgs e)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("PostCode", ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        ClsLoadFieldHelper.fAddSqlParameter("SuperUser", ddlSuperUser.Text);
        ClsLoadFieldHelper.fAddSqlParameter("OwnerBy", ddlOwnerBy.Text);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_update_byAdmin");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert5.Visible = true;
            lblAlert5.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        { 
            LoadPost();

            this.divPopUpPanel.Visible = false;
            this.divCoverLayer.Visible = false;
        }
    }

    protected void btnClose_Administrator_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel.Visible = false;
        this.divCoverLayer.Visible = false;
    }

    protected void btnAdministrator_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel.Visible = true;
        this.divCoverLayer.Visible = true;
    }

    protected void btnEdit_Info_Click(object sender, EventArgs e)
    {
        string lsRedirectURL = "";

        if (lsRedirectURL.Contains("&Mode=Edit") == false)
        {
            lsRedirectURL = HttpContext.Current.Request.Url.ToString() + "&Mode=Edit";
        }
        else
        {
            lsRedirectURL = HttpContext.Current.Request.Url.ToString();
        }

        Response.Redirect(lsRedirectURL);
    }

    protected void LoadPost()
    {

        if (ClsHashTableHelper.mClassMyConfiguration.msPostCode != "")
        {
            ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();
            this.lblPostCode.Text = ClsHashTableHelper.mClassMyConfiguration.msPostCode;

            ClsLoadFieldHelper.fAddSqlParameter("PostCode", ClsHashTableHelper.mClassMyConfiguration.msPostCode);
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_LoadPost");
                        
            this.lblPostCode.Enabled = false;

            if (ClsLoadFieldHelper.mbDataSetHasRecord)
            {
                
                ClsLoadFieldHelper.LoadSqlField("Subject", ref lblSubject_view);
                ClsLoadFieldHelper.LoadSqlField("PostDate", ref lblDPDate_view);
                ClsLoadFieldHelper.LoadSqlField("SuperUserName", ref lblSuperUser);
                ClsLoadFieldHelper.LoadSqlField("Distribution", ref lblDistribution_view);
                ClsLoadFieldHelper.LoadSqlField("Detail", ref lblDetail_view);
                ClsLoadFieldHelper.LoadSqlField("FolderCode", ref lblFolderCode);
                ClsLoadFieldHelper.LoadSqlField("Path", ref lblFolderCode_view);
                
                ClsLoadFieldHelper.LoadSqlField("Sorting", ref lblSorting_view);
                ClsLoadFieldHelper.LoadSqlField("OwnerName", ref lblOwnerBy);
                ClsLoadFieldHelper.LoadSqlField("Status", ref lblStatus);

                if (lblStatus.Text =="Draft")
                {
                    btnPost.Visible = true;
                    btnPost.Text = "To Post";
                }
                else if (lblStatus.Text == "Active")
                {
                    btnPost.Visible = true;
                    btnPost.Text = "To Draft";
                }
                else
                {
                    btnPost.Visible = false;
                }

                ClsLoadFieldHelper.LoadSqlField("Remark", ref lblRemark);
                ClsLoadFieldHelper.LoadSqlField("URL", ref lblURL);
                ClsLoadFieldHelper.LoadSqlField("URLTarget", ref lblURLTarget);

                ClsLoadFieldHelper.LoadSqlField("SystemCode", ref lblSystem);

                ClsLoadFieldHelper.LoadSqlField("SuperUser", ref ddlSuperUser);
                ClsLoadFieldHelper.LoadSqlField("OwnerBy", ref ddlOwnerBy);

                txtSubject_edit.Text = lblSubject_view.Text;
                DPDate_edit.Text = lblDPDate_view.Text;
                //txtSuperUser_edit.Text = lblSuperUser_view.Text;

                txtDistribution_edit.Text = lblDistribution_view.Text;
                txtDetail_edit.Text = lblDetail_view.Text;
                
                //txtOwnerBy_edit.Text = lblOwnerBy_view.Text;
                txtSorting_edit.Text = lblSorting_view.Text;

                if (ddlFolderCode_edit.Items.FindByValue(lblFolderCode.Text) != null)
                {
                    ddlFolderCode_edit.Text = lblFolderCode.Text;
                }

                                               

                if (ClsHashTableHelper.mClassMyConfiguration.msSystemCode != lblSystem.Text)
                {
                    string lsRedirectURL = "";

                    if (HttpContext.Current.Request.Url.ToString().Contains("SystemCode=") == false)
                    {
                        lsRedirectURL = HttpContext.Current.Request.Url.ToString() + "&SystemCode=" + lblSystem.Text;
                    }
                    else
                    {
                        lsRedirectURL = HttpContext.Current.Request.Url.ToString().Replace("SystemCode=" + ClsHashTableHelper.mClassMyConfiguration.msSystemCode, "SystemCode=" + lblSystem.Text);
                    }

                    Response.Redirect(lsRedirectURL);
                }

            } 
        }
        else
        {
            if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                              , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                              , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                              , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                              , "Create") == true)
            { 
                 CreatePost();
            }
        }

        CheckMode();

        FillGridAttachment(ClsHashTableHelper.mClassMyConfiguration.msPostCode);

    }


    protected void CreatePost()
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("SystemCode", ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
        ClsLoadFieldHelper.fAddSqlParameter("FolderCode", ClsHashTableHelper.mClassMyConfiguration.msFolderCode);
        ClsLoadFieldHelper.fAddSqlParameter("UpdateBy", this.ClsHashTableHelper.msUserName);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_CreateNewPost");

        ClsLoadFieldHelper.LoadSqlField("NewCode", ref lblPostCode);
        ClsLoadFieldHelper.LoadSqlField("error", ref lblerror);

        string lsRedirectURL = "";

        if (lsRedirectURL.Contains("&PostCode=" + lblPostCode.Text) == false)
        { 
            lsRedirectURL = HttpContext.Current.Request.Url.ToString() + "&PostCode=" + lblPostCode.Text;
        }
        else
        {
            lsRedirectURL = HttpContext.Current.Request.Url.ToString();
        }

        if (LIBLocal.bCanHaveRight(this.ClsHashTableHelper.msUserName
                              , ClsHashTableHelper.mClassMyConfiguration.msSystemCode
                              , ClsHashTableHelper.mClassMyConfiguration.msFolderCode
                              , ClsHashTableHelper.mClassMyConfiguration.msPostCode
                              , "Create") == true && msMode != "Edit")
        {
            lsRedirectURL = lsRedirectURL + "&Mode=Edit";
        }

        Response.Redirect(lsRedirectURL);
    }

    protected void UpdatePost(string psMode)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@PostCode", this.lblPostCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Subject", this.txtSubject_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Date", this.DPDate_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@SuperUser", this.lblSuperUser.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@OwnerBy", this.lblOwnerBy.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@FolderCode", this.ddlFolderCode_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Distribution", this.txtDistribution_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Detail", this.txtDetail_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Sorting", this.txtSorting_edit.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@Remark", this.lblRemark.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@URL", this.lblURL.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@URLTarget", this.lblURLTarget.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);

        if (psMode == "Post")
        {
            if (btnPost.Text == "To Draft")
            {
                ClsLoadFieldHelper.fAddSqlParameter("@Status", "Draft");
            }
            else
            {
                ClsLoadFieldHelper.fAddSqlParameter("@Status", "Active");
            }
            
        }
        else
        {
            ClsLoadFieldHelper.fAddSqlParameter("@Status", this.lblStatus.Text);
        }

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_update");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert3.Visible = true;
            lblAlert3.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {
            if (psMode == "update" || psMode == "Post")
            {               
                string lsRedirectURL = "";

                lsRedirectURL = HttpContext.Current.Request.Url.ToString().Replace("&Mode=Edit", "");

                Response.Redirect(lsRedirectURL);
            }
            else
            {
                LoadPost();
            }
            //clearEditFields();
        }
    }


    protected void btnUpdate_Info_Click(object sender, EventArgs e)
    {
        UpdatePost("update");

       // LSLIBWebBased.nsScript.mScript.Alert(this, "Post updated.", false);

    }

    protected void btnPost_Click(object sender, EventArgs e)
    {
        UpdatePost("Post");

        // LSLIBWebBased.nsScript.mScript.Alert(this, "Post updated.", false);

    }


    public void BindDDLOwnerList(UserControlLibrary.Lamsoon.SmartDropDownList pDropDownList, string psSystemCode)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();
        ClsLoadFieldHelper.fAddSqlParameter("@SystemCode", psSystemCode);
        ClsLoadFieldHelper.fAddSqlParameter("@Type", this.lblPostCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Key1", "");
        ClsLoadFieldHelper.fAddSqlParameter("@Key2", "");
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_DDLOwnerList");
        ClsLoadFieldHelper.fBindControls(pDropDownList);
    }


    #region "Attachment"
    protected void btnAttachmentAdd_Click(object sender, System.EventArgs e)
    {
        string lsItemNo = this.lblPostCode.Text;

        UpdatePost("");

        string a;

        a = FileUpload1.FileName;

        if (FileUpload1.FileName == "")
        {
            InsertAttachment("", txtFileDesc.Text, "");
        }
        else
        {
            //fUpLoadFile = 上載檔案.
            ClsFileUploadHelper.fUpLoadFile(lsItemNo, txtFileDesc, InsertAttachment);
        }

        // 更新Gridview, 顯示本申請的附件.
        //  FillGridAttachment(lsItemNo);

        FillGridAttachment(this.lblPostCode.Text);

    }

    private void InsertAttachment(string psItemID, string psFileDesc, string psFilePath)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@PostCode", lblPostCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@File_Desc", psFileDesc);
        ClsLoadFieldHelper.fAddSqlParameter("@File_Path", psFilePath);
        ClsLoadFieldHelper.fAddSqlParameter("@Item", txtItem.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);
        ClsLoadFieldHelper.fAddSqlParameter("@Remark", txtRemark.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Description", txtDescription.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Link", txtLink.Text);

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_FolderPost_Attachment_insert");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert4.Visible = true;
            lblAlert4.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {
            txtItem.Text = "";
            FileUpload1.FileName.Equals("");
            txtFileDesc.Text = "";
            txtRemark.Text = "";
            txtDescription.Text = "";
            txtLink.Text = "";
        }

    }

    private void DeleteAttachment(string psItemID, string psSeq_No)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@PostCode", lblPostCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Seq_No", psSeq_No);
        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_dms_FolderPost_Attachment_delete");

    }

    // contain demo example
    protected void grdAttachment_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        string lsCommandName = e.CommandName;
        switch (lsCommandName)
        {
            case "Delete1":
                System.Web.UI.WebControls.GridViewRow lGridViewRow = this.grdAttachment.Rows[Int32.Parse(e.CommandArgument.ToString())];
               
                int index1 = Convert.ToInt32(e.CommandArgument);

                Label lLabel_Seq_No = this.grdAttachment.Rows[index1].FindControl("lblSeq_No") as Label;
                string sSeq_No = lLabel_Seq_No.Text;
                
                System.Web.UI.WebControls.HyperLink lHyperLink = (System.Web.UI.WebControls.HyperLink)lGridViewRow.FindControl("HyperLink1");
                string lsFilePath = lHyperLink.Text;

                //刪除數據庫上的檔案記錄.
                DeleteAttachment(this.lblPostCode.Text, sSeq_No);

                //刪除伺服器上的檔案.
                ClsFileUploadHelper.fRemoveFile(lsFilePath);

                // 更新Gridview, 顯示本申請的附件.
                FillGridAttachment(this.lblPostCode.Text);

                break;
        }
    }

    private void FillGridAttachment(string psItemID)
    {
        //BindGridViewSinglePara = 一個簡化版本的綁定GridView功能. 如果STP只有1個paramater時, 可以用這個功能.
        LSLIBWebBased.nsDataSet.mDataSet.BindGridViewSinglePara("@PostCode", psItemID, "stp_wf_dms_FolderPost_Attachment_Gird", grdAttachment);
    }


    protected void grdAttachment_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        //加上刪除提醒, 和把Row值放到CommandArgument.
        LSLIBWebBased.nsCommon.mCommon.fGridViewSetDeleteReminder(e);
        
    }

    protected string bindGetFile(object value)
    {
        if (value == DBNull.Value || value == "")
            return "";
        else
            return "File";
    }

    protected string bindGetLink(object value)
    {
        if (value == DBNull.Value || value == "")
            return "";
        else
            return "Link";
    }


    #endregion

 
}



  


    