using System;
using System.Collections.Generic;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using LSLIBWebBased;
using System.Data;


public partial class WF_InformationTableReport_Mapping : System.Web.UI.Page
{

    protected ClassHashTableHelper ClsHashTableHelper;
    protected ClassFileUploadHelper ClsFileUploadHelper = new ClassFileUploadHelper();

    protected void Page_Init(object sender, EventArgs e)
    {
        //檢查登入權限+取得翻譯表
        LSLIBWebBased.nsClass.mClass.cPageLoadHelper_GuocoWeb(this, ref ClsHashTableHelper, true, "", "", true);
        this.Title = ClsHashTableHelper.sGetHash(ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        this.ucPageHeader1.msTitle = this.Title;



        LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);
    }

    protected void Page_Load(object sender, EventArgs e)
    {

        //ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "anything", "test();", true);
        LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);
         LSLIBWebBased.nsCommon.mCommon.fTextBoxSetEnterEvent(this.txtSearchKey, btnSearch);

        if (!IsPostBack)
        {
            this.divPopUpPanel2.Visible = false;
            this.divCoverLayer.Visible = false;
            this.divPopUpPanel.Visible = false;
           
            FillGridViewAll();
                       
        }
    }


    private object FillGridViewAll()
    {
        FillGridView1();

        return null;
    }

    private object FillGridView1()
    {

        LSLIBWebBased.ClassLoadFieldHelper ClsLoadFieldHelper = new LSLIBWebBased.ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@Search", this.txtSearchKey);
        ClsLoadFieldHelper.fAddSqlParameter("@action", "Search");
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_InformationTableReport_Mapping_GridDetail");
        ClsLoadFieldHelper.fBindControls(GridView1);

        this.lblCountLabel1.Text = (string)ClsLoadFieldHelper.iRowCountDesc();
        LIBLocal.SetViewSQLScript(ClsLoadFieldHelper, this.ClsHashTableHelper, "N", lblPrintSql);

        return null;
    }

    
   
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        FillGridViewAll();
    }


    protected void GridView1_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {

        switch (e.CommandName)
        {
            
            case "Edit1":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;

                    this.Label9.Text = "更新-tbl_wf_all_InformationTableReport_Mapping";
                    this.divPopUpPanel.Visible = false;
                    this.divPopUpPanel2.Visible = true;
                    this.divCoverLayer.Visible = true;


                    Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                    string sKey_Edit1 = lLabel_Edit1.Text;

                    ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                    ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                    ClsLoadFieldHelper.fAddSqlParameter("@action", "Get");
                    ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_InformationTableReport_Mapping_GridDetail");

                    this.txtReportID.Text = sKey_Edit1;
                    this.txtReportID.Enabled = false;
                    ClsLoadFieldHelper.LoadSqlField("ReportID", ref  txtReportID);
                    ClsLoadFieldHelper.LoadSqlField("Report_Name", ref  txtReport_Name);
                    ClsLoadFieldHelper.LoadSqlField("DropDown_Key", ref  txtDropDown_Key);
                    ClsLoadFieldHelper.LoadSqlField("Gird_stp_Name", ref  txtGird_stp_Name);
                    ClsLoadFieldHelper.LoadSqlField("Remark", ref  txtRemark);
                    ClsLoadFieldHelper.LoadSqlField("DDLDivisionCode", ref  txtDDLDivisionCode);
                    ClsLoadFieldHelper.LoadSqlField("DDLCompanyCode", ref  txtDDLCompanyCode);
                    ClsLoadFieldHelper.LoadSqlField("DDLRegion", ref  txtDDLRegion);
                    ClsLoadFieldHelper.LoadSqlField("NoOfDDL_Display", ref  txtNoOfDDL_Display);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLYear", ref  txtEnableDDLYear);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLMonth", ref  txtEnableDDLMonth);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLContentType", ref  txtEnableDDLContentType);
                    ClsLoadFieldHelper.LoadSqlField("EnableSearchKey", ref  txtEnableSearchKey);
                    ClsLoadFieldHelper.LoadSqlField("EnableButtonExportToExcel", ref  txtEnableButtonExportToExcel);
                    ClsLoadFieldHelper.LoadSqlField("EnableButtonUpdate", ref  txtEnableButtonUpdate);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ContentType1", ref  txtChart_ContentType1);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ContentType2", ref  txtChart_ContentType2);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ContentType3", ref  txtChart_ContentType3);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ConnectOracle", ref  txtChart_ConnectOracle);
                    ClsLoadFieldHelper.LoadSqlField("SearchKeyName", ref  txtSearchKeyName);
                    ClsLoadFieldHelper.LoadSqlField("defaultValue_SearchKeyName", ref  txtdefaultValue_SearchKeyName);
                    ClsLoadFieldHelper.LoadSqlField("Chart_EnableDefinition", ref  txtChart_EnableDefinition);
                    ClsLoadFieldHelper.LoadSqlField("Chart_type", ref  txtChart_type);

                    ClsLoadFieldHelper.LoadSqlField("EnableDateRange", ref  txtEnableDateRange);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLWeek", ref  txtEnableDDLWeek);

                    ClsLoadFieldHelper.LoadSqlField("DDLProductCode_4", ref  txtDDLProductCode_4);
                    ClsLoadFieldHelper.LoadSqlField("DDLSalesmanCode_5", ref  txtDDLSalesmanCode_5);
                    ClsLoadFieldHelper.LoadSqlField("DDLOUCode_6", ref  txtDDLOUCode_6);
                    ClsLoadFieldHelper.LoadSqlField("Showing_DDL", ref  txtShowing_DDL);

                    ClsLoadFieldHelper.LoadSqlField("EnableGrid", ref  txtEnableGrid);
                    ClsLoadFieldHelper.LoadSqlField("EnableComment", ref  txtEnableComment);

                }
                break;

            case "Copy1":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;

                    this.Label9.Text = "複製及新增-tbl_wf_all_InformationTableReport_Mapping";
                    this.divPopUpPanel.Visible = false;
                    this.divPopUpPanel2.Visible = true;
                    this.divCoverLayer.Visible = true;


                    Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                    string sKey_Edit1 = lLabel_Edit1.Text;

                    ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                    ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                    ClsLoadFieldHelper.fAddSqlParameter("@action", "Get");
                    ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_InformationTableReport_Mapping_GridDetail");

                    //this.txtReportID.Text = sKey_Edit1;
                    this.txtReportID.Text = "";
                    this.txtReportID.Enabled = true;
                    //ClsLoadFieldHelper.LoadSqlField("ReportID", ref  txtReportID);
                    ClsLoadFieldHelper.LoadSqlField("Report_Name", ref  txtReport_Name);
                    ClsLoadFieldHelper.LoadSqlField("DropDown_Key", ref  txtDropDown_Key);
                    ClsLoadFieldHelper.LoadSqlField("Gird_stp_Name", ref  txtGird_stp_Name);
                    ClsLoadFieldHelper.LoadSqlField("Remark", ref  txtRemark);
                    ClsLoadFieldHelper.LoadSqlField("DDLDivisionCode", ref  txtDDLDivisionCode);
                    ClsLoadFieldHelper.LoadSqlField("DDLCompanyCode", ref  txtDDLCompanyCode);
                    ClsLoadFieldHelper.LoadSqlField("DDLRegion", ref  txtDDLRegion);
                    ClsLoadFieldHelper.LoadSqlField("NoOfDDL_Display", ref  txtNoOfDDL_Display);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLYear", ref  txtEnableDDLYear);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLMonth", ref  txtEnableDDLMonth);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLContentType", ref  txtEnableDDLContentType);
                    ClsLoadFieldHelper.LoadSqlField("EnableSearchKey", ref  txtEnableSearchKey);
                    ClsLoadFieldHelper.LoadSqlField("EnableButtonExportToExcel", ref  txtEnableButtonExportToExcel);
                    ClsLoadFieldHelper.LoadSqlField("EnableButtonUpdate", ref  txtEnableButtonUpdate);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ContentType1", ref  txtChart_ContentType1);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ContentType2", ref  txtChart_ContentType2);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ContentType3", ref  txtChart_ContentType3);
                    ClsLoadFieldHelper.LoadSqlField("Chart_ConnectOracle", ref  txtChart_ConnectOracle);
                    ClsLoadFieldHelper.LoadSqlField("SearchKeyName", ref  txtSearchKeyName);
                    ClsLoadFieldHelper.LoadSqlField("defaultValue_SearchKeyName", ref  txtdefaultValue_SearchKeyName);
                    ClsLoadFieldHelper.LoadSqlField("Chart_EnableDefinition", ref  txtChart_EnableDefinition);
                    ClsLoadFieldHelper.LoadSqlField("Chart_type", ref  txtChart_type);

                    ClsLoadFieldHelper.LoadSqlField("EnableDateRange", ref  txtEnableDateRange);
                    ClsLoadFieldHelper.LoadSqlField("EnableDDLWeek", ref  txtEnableDDLWeek);

                    ClsLoadFieldHelper.LoadSqlField("DDLProductCode_4", ref  txtDDLProductCode_4);
                    ClsLoadFieldHelper.LoadSqlField("DDLSalesmanCode_5", ref  txtDDLSalesmanCode_5);
                    ClsLoadFieldHelper.LoadSqlField("DDLOUCode_6", ref  txtDDLOUCode_6);
                    ClsLoadFieldHelper.LoadSqlField("Showing_DDL", ref  txtShowing_DDL);

                    ClsLoadFieldHelper.LoadSqlField("EnableGrid", ref  txtEnableGrid);
                    ClsLoadFieldHelper.LoadSqlField("EnableComment", ref  txtEnableComment);

                }
                break;

            case "Edit2":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;

                    this.Label29.Text = "更新Link-tbl_wf_rss_ReportMaster";
                    this.divPopUpPanel2.Visible = false;
                    this.divPopUpPanel.Visible = true;
                    this.divCoverLayer.Visible = true;


                    Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                    string sKey_Edit1 = lLabel_Edit1.Text;

                    ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                    ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                    ClsLoadFieldHelper.fBuildDataSet("stp_wf_rss_ReportMaster_GridDetail");

                    this.txtReportIDLink.Text = sKey_Edit1;

                    ClsLoadFieldHelper.LoadSqlField("Report_Name", ref  txtReport_Name);
                    ClsLoadFieldHelper.LoadSqlField("ReportType", ref  txtReportType);
                    ClsLoadFieldHelper.LoadSqlField("ReportName", ref  txtReportName);
                    ClsLoadFieldHelper.LoadSqlField("ReportSorting", ref  txtReportSorting);
                    ClsLoadFieldHelper.LoadSqlField("URL", ref  txtURL);
                    ClsLoadFieldHelper.LoadSqlField("URLTarget", ref  txtURLTarget);
                    ClsLoadFieldHelper.LoadSqlField("status", ref  txtstatus);
                }
                break;
        }
    }

    protected void btnCloseEditHeaderLink_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel.Visible = false;
        this.divCoverLayer.Visible = false;
        clearEditHeaderFieldsLink();
    }

    protected void btnUpdateEditHeaderLink_Click(object sender, EventArgs e)
    {

        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@ReportID", txtReportIDLink.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@ReportType", txtReportType.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@ReportName", txtReportName.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@ReportSorting", txtReportSorting.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@URL", txtURL.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@URLTarget", txtURLTarget.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@status", txtstatus.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_rss_ReportMaster_Update");
        

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            //LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            lblAlert1.Visible = true;
            lblAlert1.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {
            //FillGridView2();

            FillGridView1();

            this.divPopUpPanel.Visible = false;
            this.divCoverLayer.Visible = false;
            clearEditHeaderFieldsLink();
        }
    }

    private object clearEditHeaderFieldsLink()
    {
        txtReportID.Text = "";
        txtReportType.Text = "";
        txtReportName.Text = "";
        txtReportSorting.Text = "";
        txtURL.Text = "";
        txtURLTarget.Text = "";
        txtstatus.Text = "";

        lblAlert1.Visible = false;
        lblAlert1.Text = "";

        return null;
    }

    protected void btnCloseEditHeader_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel2.Visible = false;
        this.divCoverLayer.Visible = false;
        clearEditHeaderFields();
    }

    protected void btnInsert_Click(object sender, EventArgs e)
    {
        this.Label9.Text = "新增-tbl_wf_all_InformationTableReport_Mapping";
        this.txtReportID.Enabled = true;
        this.divPopUpPanel2.Visible = true;
        this.divCoverLayer.Visible = true;
    }

    protected void btnUpdateEditHeader_Click(object sender, EventArgs e)
    {

        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();
        
        ClsLoadFieldHelper.fAddSqlParameter("@ReportID", txtReportID.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Report_Name", txtReport_Name.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DropDown_Key", txtDropDown_Key.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Gird_stp_Name", txtGird_stp_Name.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Remark", txtRemark.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DDLDivisionCode", txtDDLDivisionCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DDLCompanyCode", txtDDLCompanyCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DDLRegion", txtDDLRegion.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@NoOfDDL_Display", txtNoOfDDL_Display.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableDDLYear", txtEnableDDLYear.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableDDLMonth", txtEnableDDLMonth.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableDDLContentType", txtEnableDDLContentType.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableSearchKey", txtEnableSearchKey.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableButtonExportToExcel", txtEnableButtonExportToExcel.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableButtonUpdate", txtEnableButtonUpdate.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Chart_ContentType1", txtChart_ContentType1.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Chart_ContentType2", txtChart_ContentType2.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Chart_ContentType3", txtChart_ContentType3.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Chart_ConnectOracle", txtChart_ConnectOracle.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@SearchKeyName", txtSearchKeyName.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@defaultValue_SearchKeyName", txtdefaultValue_SearchKeyName.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Chart_EnableDefinition", txtChart_EnableDefinition.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Chart_type", txtChart_type.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableDateRange", txtEnableDateRange.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableDDLWeek", txtEnableDDLWeek.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@DDLProductCode_4", txtDDLProductCode_4.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DDLSalesmanCode_5", txtDDLSalesmanCode_5.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DDLOUCode_6", txtDDLOUCode_6.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Showing_DDL", txtShowing_DDL.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@EnableGrid", txtEnableGrid.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@EnableComment", txtEnableComment.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);

        if (this.txtReportID.Enabled == false)
        {
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_InformationTableReport_Mapping_Update");
        }
        else
        {
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_InformationTableReport_Mapping_insert");
        }

       
        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            //LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            lblAlert1.Visible = true;
            lblAlert1.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {
            FillGridView1();

            this.divPopUpPanel2.Visible = false;
            this.divCoverLayer.Visible = false;
            clearEditHeaderFields();
        }
    }


    private object clearEditHeaderFields()
    {
        txtReportID.Text = "";
        txtReport_Name.Text = "";
        txtDropDown_Key.Text = "";
        txtGird_stp_Name.Text = "";
        txtRemark.Text = "";
        txtDDLDivisionCode.Text = "";
        txtDDLCompanyCode.Text = "";
        txtDDLRegion.Text = "";
        txtNoOfDDL_Display.Text = "";
        txtEnableDDLYear.Text = "";
        txtEnableDDLMonth.Text = "";
        txtEnableDDLContentType.Text = "";
        txtEnableSearchKey.Text = "";
        txtEnableButtonExportToExcel.Text = "";
        txtEnableButtonUpdate.Text = "";
        txtChart_ContentType1.Text = "";
        txtChart_ContentType2.Text = "";
        txtChart_ContentType3.Text = "";
        txtChart_ConnectOracle.Text = "";
        txtSearchKeyName.Text = "";
        txtdefaultValue_SearchKeyName.Text = "";
        txtChart_EnableDefinition.Text = "";
        txtChart_type.Text = "";

        txtEnableGrid.Text = "";
        txtEnableComment.Text = "";

        txtEnableDateRange.Text = "";
        txtEnableDDLWeek.Text = "";

        txtDDLProductCode_4.Text = "";
        txtDDLSalesmanCode_5.Text = "";
        txtDDLOUCode_6.Text = "";
        txtShowing_DDL.Text = "";

        lblAlert1.Visible = false;
        lblAlert1.Text = "";

        return null;
    }


   
   

}