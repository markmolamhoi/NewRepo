using System;
using System.Collections.Generic;
using System.Web;
using System.Linq;
using System.Web.UI;
using System.Web.UI.WebControls;
using LSLIBWebBased;
using System.Data;

public partial class WF_TranslationField : System.Web.UI.Page
{

    protected ClassHashTableHelper ClsHashTableHelper;
    protected ClassFileUploadHelper ClsFileUploadHelper = new ClassFileUploadHelper();

    protected void Page_Init(object sender, EventArgs e)
    {
        //檢查登入權限+取得翻譯表
        LSLIBWebBased.nsClass.mClass.cPageLoadHelper_GuocoWeb(this, ref ClsHashTableHelper, true, "","",true);
        this.Title = ClsHashTableHelper.sGetHash(ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        this.ucPageHeader1.msTitle = this.Title;

        LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);
    }

    protected void Page_Load(object sender, EventArgs e)
    {

        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "anything", "test();", true);
        LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);
        LSLIBWebBased.nsCommon.mCommon.fTextBoxSetEnterEvent(this.txtSearchKey, btnSearch);

        if (!IsPostBack)
        {
            this.divPopUpPanel.Visible = false;
            this.divCoverLayer.Visible = false;
           
            //this.txtSearchKey.Text = lblInvoiceNum.Text;
            //LSLIBWebBased.nsCommon.mCommon.fButtonSetOpenURL(this.btnExcelUpload_header, "ExcelUpload.aspx?UploadType=TAX_ReconciliationTracking_Header");
          
            FillGridViewAll();
                       
        }
    }


    private object FillGridViewAll()
    {
        FillGridView1();

        return null;
    }

    private object FillGridView1()
    {

        LSLIBWebBased.ClassLoadFieldHelper ClsLoadFieldHelper = new LSLIBWebBased.ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@Search", this.txtSearchKey);
        ClsLoadFieldHelper.fAddSqlParameter("@action", "Search");
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_TranslationField_GridDetail");
        ClsLoadFieldHelper.fBindControls(GridView1);

        this.lblCountLabel1.Text = (string)ClsLoadFieldHelper.iRowCountDesc();

        LIBLocal.SetViewSQLScript(ClsLoadFieldHelper, this.ClsHashTableHelper, "N", lblPrintSql);

        return null;
    }

    
   
    protected void btnSearch_Click(object sender, EventArgs e)
    {
   
        FillGridViewAll();
    }


    protected void GridView1_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {

        switch (e.CommandName)
        {
            
            case "Edit1":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;

                    this.Label9.Text = "更新";
                    this.divPopUpPanel.Visible = true;
                    this.divCoverLayer.Visible = true;


                    Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                    string sKey_Edit1 = lLabel_Edit1.Text;
                    //this.lblEditDetailOrderNo.Text = (index1 + 1).ToString();

                    //Label lLabel2_Edit1 = this.GridView1.Rows[index1].FindControl("lblKeyCustomerCompany_Header") as Label;
                    //string sCustomerCompany_Edit1 = lLabel2_Edit1.Text;

                    ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                    ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                    ClsLoadFieldHelper.fAddSqlParameter("@action", "Get");
                    ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_TranslationField_GridDetail");

                    this.txtSeq_No.Text = sKey_Edit1;
                    //this.txtKey.Text = sKey_Edit1;
                    this.txtKey.Enabled = false;
                    this.btnUpdateKey.Visible = true;
                    ClsLoadFieldHelper.LoadSqlField("Field_Key", ref txtKey);
                    ClsLoadFieldHelper.LoadSqlField("Field_en", ref txtEN);
                    ClsLoadFieldHelper.LoadSqlField("Field_tc", ref txtTC);
                    ClsLoadFieldHelper.LoadSqlField("Field_sc", ref txtSC);

                    txtEN.Text = txtEN.Text.Replace("</br>", Char.ConvertFromUtf32(10));
                    txtTC.Text = txtTC.Text.Replace("</br>", Char.ConvertFromUtf32(10));
                    txtSC.Text = txtSC.Text.Replace("</br>", Char.ConvertFromUtf32(10));
                }
                break;

            case "Copy1":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;

                    this.Label9.Text = "複製及新增";
                    this.divPopUpPanel.Visible = true;
                    this.divCoverLayer.Visible = true;


                    Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                    string sKey_Edit1 = lLabel_Edit1.Text;
                    //this.lblEditDetailOrderNo.Text = (index1 + 1).ToString();

                    //Label lLabel2_Edit1 = this.GridView1.Rows[index1].FindControl("lblKeyCustomerCompany_Header") as Label;
                    //string sCustomerCompany_Edit1 = lLabel2_Edit1.Text;

                    ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                    ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                    ClsLoadFieldHelper.fAddSqlParameter("@action", "Get");
                    ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_TranslationField_GridDetail");

                    //this.txtKey.Text = sKey_Edit1;
                    //this.txtKey.Enabled = false;
                    this.txtKey.Text = "";
                    this.txtKey.Enabled = true;
                    this.btnUpdateKey.Visible = false;
                    ClsLoadFieldHelper.LoadSqlField("Field_en", ref txtEN);
                    ClsLoadFieldHelper.LoadSqlField("Field_tc", ref txtTC);
                    ClsLoadFieldHelper.LoadSqlField("Field_sc", ref txtSC);

                    txtEN.Text = txtEN.Text.Replace("</br>", Char.ConvertFromUtf32(10));
                    txtTC.Text = txtTC.Text.Replace("</br>", Char.ConvertFromUtf32(10));
                    txtSC.Text = txtSC.Text.Replace("</br>", Char.ConvertFromUtf32(10));
                }
                break;

            //case "CopytoDev":

            //    int index1a = Convert.ToInt32(e.CommandArgument);

            //    int PageIndexa = this.GridView1.PageIndex;
            //    int PageSizea = this.GridView1.PageSize;

            //    index1a = index1a - PageIndexa * PageSizea;

            //    Label lLabel_Edit1a = this.GridView1.Rows[index1a].FindControl("lblKey_Header") as Label;
            //    string sKey_Edit1a = lLabel_Edit1a.Text;

            //    ClassLoadFieldHelper ClsLoadFieldHelper1 = new ClassLoadFieldHelper();

            //    ClsLoadFieldHelper1.fAddSqlParameter("@Seq_No", sKey_Edit1a);

            //    ClsLoadFieldHelper1.fBuildDataSet("stp_wf_all_TranslationField_UpdateToDev");

            //    LSLIBWebBased.nsScript.mScript.Alert(this, "己更新", false);

            //    break;

        }
    }

    protected void btnCloseEditHeader_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel.Visible = false;
        this.divCoverLayer.Visible = false;
        clearEditHeaderFields();
    }

    protected void btnUpdateKey_Click(object sender, EventArgs e)
    {
        this.txtKey.Enabled = true;
    }

    protected void btnInsert_Click(object sender, EventArgs e)
    {
        this.Label9.Text = "新增";
        this.txtKey.Enabled = true;
        this.btnUpdateKey.Visible = false;
        this.divPopUpPanel.Visible = true;
        this.divCoverLayer.Visible = true;
    }

    protected void btnUpdateEditHeader_Click(object sender, EventArgs e)
    {

        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        //DateTime a = Convert.ToDateTime(txtReturnDate.Text);
        //string b = a.ToString("yyyy-MM-dd");

        ClsLoadFieldHelper.fAddSqlParameter("@Seq_No", txtSeq_No.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Field_Key", txtKey.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Field_en_new", txtEN.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Field_tc_new", txtTC.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Field_sc_new", txtSC.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);

        if (this.txtSeq_No.Text != "")
        {
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_TranslationField_Update");
        }
        else
        {
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_TranslationField_insert");
        }

       
        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert1.Visible = true;
            lblAlert1.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {
            //FillGridView2();

            FillGridView1();

            this.divPopUpPanel.Visible = false;
            this.divCoverLayer.Visible = false;
            clearEditHeaderFields();
        }
    }


    private object clearEditHeaderFields()
    {
        txtSeq_No.Text = "";
        txtKey.Text = "";
        txtEN.Text = "";
        txtTC.Text = "";
        txtSC.Text = "";
        lblAlert1.Visible = false;
        lblAlert1.Text = "";

        return null;
    }


   
   

}