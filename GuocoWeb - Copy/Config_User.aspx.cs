using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using LSLIBWebBased;
using System.Data;


public partial class Config_User : System.Web.UI.Page
{
    protected ClassHashTableHelper ClsHashTableHelper;
    protected ClassFileUploadHelper ClsFileUploadHelper = new ClassFileUploadHelper();

    protected string strEmailIP = System.Configuration.ConfigurationManager.AppSettings["EmailIP"];

    //查询内容类型
    private string msContentType
    {
        get
        {
            if (LSLIBWebBased.nsSQL.mSQL.oHandleNullAndNothing(this.Request.QueryString["ContenType"]) == null)
            {
                return "Contentype";
            }
            else
            {
                return this.Request.QueryString["ContentType"];
            }
        }
    }

    protected void Page_Init(object sender, EventArgs e)
    {
        //檢查登入權限+取得翻譯表
        LSLIBWebBased.nsClass.mClass.cPageLoadHelper_GuocoWeb(this, ref ClsHashTableHelper, true, "", "", true);
        this.Title = ClsHashTableHelper.sGetHash(ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        this.ucPageHeader1.msTitle = this.Title;
        //this.lblReportName.Text = this.Title;
        
        LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);

    }

    protected void Page_Load(object sender, EventArgs e)
    {

        // LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);
        //LSLIBWebBased.nsCommon.mCommon.fTextBoxSetEnterEvent(this.txtSearchKey, btnSearch);

        if (!IsPostBack)
        {
            this.divCoverLayer.Visible = false;
            this.divPopUpPanel.Visible = false;
          
            //this.txtSearchKey.Text = lblInvoiceNum.Text;

            //LSLIBWebBased.nsCommon.mCommon.fButtonSetOpenURL(this.btnExcelUpload_header, "ExcelUpload.aspx?UploadType=TAX_ReconciliationTracking_Header");
            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLCompanyCode", DDLCompanyCode, LSLIBWebBased.LIBWebBased.enDropDownListType.All);
          
            Bind_ddlDivisionCode("All", ddlDivisionCode);
           //LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLDivisionCode", ddlDivisionCode, LSLIBWebBased.LIBWebBased.enDropDownListType.All);

            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLCompanyCode", ddlCompanyCode_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);
            //LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLDivisionCode", ddlDivisionCode_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);
            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLStatus", ddlProfileStatus_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);


            //LSLIBWebBased.nsCommon.mCommon.BindDDLCompanyByStaff(this.ddlCompany_Edit);
            //this.ddlCompany_Edit.Items.Remove(this.ddlCompany_Edit.Items.FindByValue("All"));
            //ddlCompany_Edit.Items.Insert(0, "");

            // LSLIBWebBased.nsCommon.mCommon.BindDDLMaster(this.ddlPayment_method, "286", LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            FillGridView1();
        }
    }


    //private object FillGridViewAll()
    //{
    //    FillGridView1();
       
    //    return null;
    //}

    private object FillGridView1()
    {

        LSLIBWebBased.ClassLoadFieldHelper ClsLoadFieldHelper = new LSLIBWebBased.ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@Search", this.txtSearchKey.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@CompanyCode", this.DDLCompanyCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DivisionCode", this.ddlDivisionCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@action", "Search");
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_User_GridDetail");
        ClsLoadFieldHelper.fBindControls(GridView1);
        
        this.lblCountLabel1.Text = (string)ClsLoadFieldHelper.iRowCountDesc();

        LIBLocal.SetViewSQLScript(ClsLoadFieldHelper, this.ClsHashTableHelper, "N", lblPrintSql);

        return null;
    }

    protected void btnSearch_Click(object sender, EventArgs e)
    {
        lblCompanyCode.Text = this.DDLCompanyCode.Text;
        lblDivisionCode.Text = ddlDivisionCode.Text;
        lblSearch.Text = this.txtSearchKey.Text;

        FillGridView1();
    }

    protected void GridView1_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        foreach (GridViewRow row in GridView1.Rows)
        {
            //Button lbtnMarkCloseInfo = (Button)row.FindControl("btnMarkCloseInfo");
            //lbtnMarkCloseInfo.OnClientClick = "return confirm('" + ClsHashTableHelper.sGetHash("Are you sure to mark close?") + "');";

            Button lbtnResetPassword = (Button)row.FindControl("btnResetPassword");
            lbtnResetPassword.OnClientClick = "return confirm('" + ClsHashTableHelper.sGetHash("Are you sure to reset user password?") + "');";

            //Button lbtnSendPassword = (Button)row.FindControl("btnSendPassword");
            //lbtnSendPassword.OnClientClick = "return confirm('" + ClsHashTableHelper.sGetHash("Are you sure to send user password?") + "');";
        }
    }

   
    protected void GridView1_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        switch (e.CommandName)
        {

            case "Edit1":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;                                    

                     Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                     string sKey_Edit1 = lLabel_Edit1.Text;

                     if (bCanHaveRight(sKey_Edit1, "Edit"))
                    {
                      this.Label6.Text = "Edit User Profile";
                      this.btnUpdate_UserProfile.Text = "Edit";
                     // this.lblAction.Text = "Update";
                      this.divCoverLayer.Visible = true;
                      this.divPopUpPanel.Visible = true;
                      this.div_ProfileStatus_edit.Visible = true;
                     //this.btnGetNewField_Type.Visible = false;

                     //Label lLabel2_Edit1 = this.GridView1.Rows[index1].FindControl("lblKeyCustomerCompany_Header") as Label;
                     //string sCustomerCompany_Edit1 = lLabel2_Edit1.Text;

                     ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                     ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                     ClsLoadFieldHelper.fAddSqlParameter("@action", "Get");
                     ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_User_GridDetail");

                     this.txtUserCode.Text = sKey_Edit1;
                     this.txtUserCode.Enabled = false;
                     ClsLoadFieldHelper.LoadSqlField("UserShortName", ref  txtUserShortName);
                     ClsLoadFieldHelper.LoadSqlField("UserFullName", ref  txtUserFullName);
                     ClsLoadFieldHelper.LoadSqlField("CompanyCode", ref  ddlCompanyCode_edit);
                     Bind_ddlDivisionCode(this.ddlCompanyCode_edit.Text, ddlDivisionCode_edit);
                     ClsLoadFieldHelper.LoadSqlField("DivisionCode", ref  ddlDivisionCode_edit);
                     ClsLoadFieldHelper.LoadSqlField("Email", ref  txtEmail);
                     ClsLoadFieldHelper.LoadSqlField("TelephoneExtension", ref  txtTelephoneExtension);
                     ClsLoadFieldHelper.LoadSqlField("PostDefaultOwner", ref  txtPostDefaultOwner);
                     ClsLoadFieldHelper.LoadSqlField("AccountLock", ref  txtAccountLock);
                     ClsLoadFieldHelper.LoadSqlField("Remark", ref  txtRemark);
                     ClsLoadFieldHelper.LoadSqlField("Status", ref  ddlProfileStatus_edit);
                    }

                }
                break;

         
            //case "MarkClose1":
            //    int indexD = Convert.ToInt32(e.CommandArgument);

            //    int PageIndexD = this.GridView1.PageIndex;
            //    int PageSizeD = this.GridView1.PageSize;

            //    indexD = indexD - PageIndexD * PageSizeD;

            //    Label lLabel_Edit_MC = this.GridView1.Rows[indexD].FindControl("lblKey_Header") as Label;
            //    string sKey_Edit1_MC = lLabel_Edit_MC.Text;

            //    if (bCanHaveRight(sKey_Edit1_MC, "MarkClose"))
            //    {
            //        ClassLoadFieldHelper ClsLoadFieldHelper_MC = new ClassLoadFieldHelper();

            //        //ClsLoadFieldHelper_MC.fAddSqlParameter("@Staff_id", sKey_Delete1_StaffID);
            //        //ClsLoadFieldHelper_MC.fAddSqlParameter("@FunctionGroupName", sKey_Delete1_Function_Name);
            //        //ClsLoadFieldHelper_MC.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);
            //        ClsLoadFieldHelper_MC.fBuildDataSet("stp_wf_all_SystemRightManagement_delete_FunctionUserPrivilege");

            //        if (ClsLoadFieldHelper_MC.mbDataSetHasRecord)
            //        {
            //            //LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            //            //lblAlert1.Visible = true;
            //            //lblAlert1.Text = ClsLoadFieldHelper_MC.oLoadSqlField("Result").ToString();
            //        }
            //        else
            //        {
            //            FillGridView1();
            //        }
            //    }
            //    break;

            case "ResetPassword1":
                int indexR = Convert.ToInt32(e.CommandArgument);

                int PageIndexR = this.GridView1.PageIndex;
                int PageSizeR = this.GridView1.PageSize;

                indexR = indexR - PageIndexR * PageSizeR;

                Label lLabel_Edit_R = this.GridView1.Rows[indexR].FindControl("lblKey_Header") as Label;
                string sKey_Edit1_R = lLabel_Edit_R.Text;

                if (bCanHaveRight(sKey_Edit1_R, "ResetPassword"))
                {
                    string lsRandomPassword = LIBLocal.sLoadRandomPassword(8, 7);
                    LIBLocal.UpdatePassword(sKey_Edit1_R, lsRandomPassword,"reset");

                    if (bIsExistsEmail(sKey_Edit1_R))
                    {
                        //send UserEmail
                        LIBLocal.SendMailnew(sKey_Edit1_R, "", "", "重置登陆密码", lsRandomPassword, "", "", strEmailIP, "", "");
                    }
                    else
                    {
                        //send AdministratorEmail
                        LIBLocal.SendMailnew(this.ClsHashTableHelper.msUserName, "", "", "重置登陆密码", lsRandomPassword, "", "", strEmailIP, "", "");
                    }

                    LSLIBWebBased.nsScript.mScript.Alert(this, "Finished to reset and sent password to user.", false);
                    //FillGridView1();
                }
                break;

            //case "SendPassword1":
            //    int indexS = Convert.ToInt32(e.CommandArgument);

            //    int PageIndexS = this.GridView1.PageIndex;
            //    int PageSizeS = this.GridView1.PageSize;

            //    indexS = indexS - PageIndexS * PageSizeS;

            //    Label lLabel_Edit_S = this.GridView1.Rows[indexS].FindControl("lblKey_Header") as Label;
            //    string sKey_Edit1_S = lLabel_Edit_S.Text;

            //    if (bCanHaveRight(sKey_Edit1_S, "SendPassword"))
            //    {
            //        //ClassLoadFieldHelper ClsLoadFieldHelper_S = new ClassLoadFieldHelper();

            //        ////ClsLoadFieldHelper_MC.fAddSqlParameter("@Staff_id", sKey_Delete1_StaffID);
            //        ////ClsLoadFieldHelper_MC.fAddSqlParameter("@FunctionGroupName", sKey_Delete1_Function_Name);
            //        ////ClsLoadFieldHelper_MC.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);
            //        //ClsLoadFieldHelper_S.fBuildDataSet("stp_wf_all_SystemRightManagement_delete_FunctionUserPrivilege");

            //        //if (ClsLoadFieldHelper_S.mbDataSetHasRecord)
            //        //{
            //        //    //LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            //        //    //lblAlert1.Visible = true;
            //        //    //lblAlert1.Text = ClsLoadFieldHelper_MC.oLoadSqlField("Result").ToString();
            //        //}

            //        LSLIBWebBased.nsScript.mScript.Alert(this, "Sent password to user.", false);
            //        //FillGridView1();
            //    }
            //    break;
        }
    }


    protected void btnClose_UserProfile_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel.Visible = false;
        this.divCoverLayer.Visible = false;
       // FillGridView1();
        clearEditFields();
    }

    protected void btnInsert_AddUserProfile_Click(object sender, EventArgs e)
    {
        //this.lblAction.Text = "New";
        //this.txtID.Enabled = true;
        if (bCanHaveRight("", "Add"))
        {
            this.Label6.Text = "Add User Profile";
            this.btnUpdate_UserProfile.Text = "Add";
            this.txtUserCode.Enabled = true;
            this.div_ProfileStatus_edit.Visible = false;
            this.divPopUpPanel.Visible = true;
            this.divCoverLayer.Visible = true;
        }
    }
 
    
    protected void btnUpdate_UserProfile_Click(object sender, EventArgs e)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@UserCode", this.txtUserCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@UserShortName ", this.txtUserShortName.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@UserFullName", this.txtUserFullName.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@CompanyCode", this.ddlCompanyCode_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@DivisionCode", this.ddlDivisionCode_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Email ", this.txtEmail.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@TelephoneExtension", this.txtTelephoneExtension.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@PostDefaultOwner", this.txtPostDefaultOwner.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@AccountLock ", this.txtAccountLock.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Remark", this.txtRemark.Text);
        //ClsLoadFieldHelper.fAddSqlParameter("@Status", this.ddlProfileStatus_edit.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);

        if (bCanValidPostDefaulOwner(this.txtPostDefaultOwner.Text))
        {
            if (this.txtUserCode.Enabled == true)
            {
                ClsLoadFieldHelper.fAddSqlParameter("@Status", "Active");
                ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_User_insert");
            }
            else
            {
                ClsLoadFieldHelper.fAddSqlParameter("@Status", this.ddlProfileStatus_edit.Text);
                ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_User_update");
            }

            if (ClsLoadFieldHelper.mbDataSetHasRecord)
            {
                //LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
                lblAlert3.Visible = true;
                lblAlert3.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
            }
            else
            {
                //insert then reset Password
                if (this.txtUserCode.Enabled == true)
                {
                    //todo, Reset Password
                    string lsRandomPassword = LIBLocal.sLoadRandomPassword(8, 7);
                    LIBLocal.UpdatePassword(txtUserCode.Text, lsRandomPassword, "reset");

                    if (bIsExistsEmail(txtUserCode.Text))
                    {
                        //send UserEmail
                        LIBLocal.SendMailnew(txtUserCode.Text, "", "", "新用户登陆密码", lsRandomPassword, "", "", strEmailIP, "", "");
                    }
                    else
                    {
                        //send AdministratorEmail
                        LIBLocal.SendMailnew(this.ClsHashTableHelper.msUserName, "", "", "新用户登陆密码", lsRandomPassword, "", "", strEmailIP, "", "");
                    }
                }

                FillGridView1();
                this.divPopUpPanel.Visible = false;
                this.divCoverLayer.Visible = false;
                clearEditFields();
            }
        }
    }
    

    //protected void btnGetStaffName_Click(object sender, EventArgs e)
    //{

    //    ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

    //    ClsLoadFieldHelper.fAddSqlParameter("@Staff_id", txtStaff_id.Text);
    //    ClsLoadFieldHelper.fBuildDataSet("stp_wf_rss_cr_IPPhoneList_GetStaffName");

    //    this.lblStaffName.Text = ClsLoadFieldHelper.oLoadSqlField("name").ToString();
    //}

    
    private object clearEditFields()
    {
        txtUserCode.Text = "";
        txtUserShortName.Text = "";
        txtUserFullName.Text = "";
        ddlCompanyCode_edit.Text = "";
        //ddlDivisionCode_edit.Text = "";
        Bind_ddlDivisionCode(this.ddlCompanyCode_edit.Text, ddlDivisionCode_edit);
        txtEmail.Text = "";
        txtTelephoneExtension.Text = "";
        txtPostDefaultOwner.Text = "";
        txtAccountLock.Text = "";
        txtRemark.Text = "";
        ddlProfileStatus_edit.Text = "";

        lblAlert3.Visible = false;
        lblAlert3.Text = "";

        return null;
    }



    public bool bIsExistsEmail(String psUserCode)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();
        ClsLoadFieldHelper.fAddSqlParameter("@username", psUserCode);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_account_bIsExistsEmail");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            return false;
        }
        else
        {
            return true;
        }
    }


    public bool bCanHaveRight(String psUserCode, String psAction)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@username", this.ClsHashTableHelper.msUserName);
        ClsLoadFieldHelper.fAddSqlParameter("@UserCode", psUserCode);
        ClsLoadFieldHelper.fAddSqlParameter("@Action", psAction);

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_User_bCanHaveRight");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            LSLIBWebBased.nsScript.mScript.Alert(this, ClsLoadFieldHelper.oLoadSqlField("Result").ToString(), false);
            return false;
        }
        else
        {
            return true;
        }
    }

    public bool bCanValidPostDefaulOwner(String psUserCode)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@username", psUserCode);

        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_User_bCanValidPostDefaulOwner");

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert3.Visible = true;
            lblAlert3.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();       
            return false;
        }
        else
        {
            lblAlert3.Visible = false;
            return true;
        }
    }


    protected void ddlCompanyCode_SelectedIndexChanged(object sender, EventArgs e)
    {
        Bind_ddlDivisionCode(this.DDLCompanyCode.Text, ddlDivisionCode);
    }

    protected void ddlCompanyCode_edit_SelectedIndexChanged(object sender, EventArgs e)
    {
        Bind_ddlDivisionCode(this.ddlCompanyCode_edit.Text, ddlDivisionCode_edit);
    }


    private object Bind_ddlDivisionCode(String msCompanyCode, Object objDivisionCode)
    {

        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@lang", this.ClsHashTableHelper.msLang);
        ClsLoadFieldHelper.fAddSqlParameter("@CompanyCode", msCompanyCode);
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_DDLDivisionCode",null,"",false);
        ClsLoadFieldHelper.fBindControls(objDivisionCode);

        if (objDivisionCode == ddlDivisionCode)
        { 
            ddlDivisionCode.Items.Insert(0, "All");
        }
        else if (objDivisionCode == ddlDivisionCode_edit)
        {
            ddlDivisionCode_edit.Items.Insert(0, "");
        }

        return null;
    }

    //protected void btnExporttoExcel_Click1(object sender, EventArgs e)
    //{
    //    //LSLIBWebBased.LIBWebBased.ExportToExcelMaster(this.GridView1, this, FillGridView1);
    //    LSLIBWebBased.LIBWebBased.ExportToExcelMaster(this.divDetail, this, FillGridViewExcel);

    //}
   
   
}