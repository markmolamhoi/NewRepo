using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using LSLIBWebBased;
using System.Data;

public partial class Config_FolderPost : System.Web.UI.Page
{
    protected ClassHashTableHelper ClsHashTableHelper;
    protected ClassFileUploadHelper ClsFileUploadHelper = new ClassFileUploadHelper();

    //查询内容类型
    private string msContentType
    {
        get
        {
            if (LSLIBWebBased.nsSQL.mSQL.oHandleNullAndNothing(this.Request.QueryString["ContenType"]) == null)
            {
                return "Contentype";
            }
            else
            {
                return this.Request.QueryString["ContentType"];
            }
        }
    }

    protected void Page_Init(object sender, EventArgs e)
    {
        //檢查登入權限+取得翻譯表
        LSLIBWebBased.nsClass.mClass.cPageLoadHelper_GuocoWeb(this, ref ClsHashTableHelper, true, "", "", true);
        this.Title = ClsHashTableHelper.sGetHash(ClsHashTableHelper.mClassMyConfiguration.msPostCode);
        this.ucPageHeader1.msTitle = this.Title;
          
        LSLIBWebBased.nsClass.mClass.cGridViewAddSortMethod(this.GridView1, FillGridView1, this.lblSortLabel1, null, ClassGridViewHelper.enGridViewTypeCollection.DetailReportWithAutoGeneratedColumnWithNoHeader);
       
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        LSLIBWebBased.nsCommon.mCommon.fTextBoxSetEnterEvent(this.txtSearchKey, btnSearch);

        if (!IsPostBack)
        {
            this.divCoverLayer.Visible = false;
            this.divPopUpPanel.Visible = false;

            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlFolderCode, ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
            LIBLocal2.BindDDLSystemFolder_WithAllChildren(ddlFolderCode_edit, ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
          
            LSLIBWebBased.nsDataSet.mDataSet.BindListControl("stp_wf_all_DDLStatus", ddlInfoStatus_edit, LSLIBWebBased.LIBWebBased.enDropDownListType.Blank);

            FillGridView1();
        }
    }

    private object FillGridView1()
    {

        lblFolderCode.Text = this.ddlFolderCode.Text;
        lblSearch.Text = this.txtSearchKey.Text;
        this.lblReportName.Text = this.ddlFolderCode.Text;

        LSLIBWebBased.ClassLoadFieldHelper ClsLoadFieldHelper = new LSLIBWebBased.ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@SystemCode", this.ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
        ClsLoadFieldHelper.fAddSqlParameter("@FolderCode", this.ddlFolderCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Search", this.txtSearchKey.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@action", "Search");
        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_GridDetail");
        ClsLoadFieldHelper.fBindControls(GridView1);
        
        this.lblCountLabel1.Text = (string)ClsLoadFieldHelper.iRowCountDesc();

        LIBLocal.SetViewSQLScript( ClsLoadFieldHelper, this.ClsHashTableHelper, "N", lblPrintSql);

        return null;
    }
    
    protected void btnSearch_Click(object sender, EventArgs e)
    {

        FillGridView1();
    }

    protected void GridView1_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {

    }
   
    protected void GridView1_RowCommand(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e)
    {
        switch (e.CommandName)
        {

            case "Edit1":
                if (this.divCoverLayer.Visible == false)
                {
                    int index1 = Convert.ToInt32(e.CommandArgument);

                    int PageIndex = this.GridView1.PageIndex;
                    int PageSize = this.GridView1.PageSize;

                    index1 = index1 - PageIndex * PageSize;                                    

                     Label lLabel_Edit1 = this.GridView1.Rows[index1].FindControl("lblKey_Header") as Label;
                     string sKey_Edit1 = lLabel_Edit1.Text;

                     //if (bCanHaveRight(sKey_Edit1, "Edit"))
                    {
                      this.Label6.Text = "Edit Post";
                      this.btnUpdate_Info.Text = "Edit";
                     // this.lblAction.Text = "Update";
                      this.divCoverLayer.Visible = true;
                      this.divPopUpPanel.Visible = true;
                      this.div_ProfileStatus_edit.Visible = true;
                     //this.btnGetNewField_Type.Visible = false;

                     //Label lLabel2_Edit1 = this.GridView1.Rows[index1].FindControl("lblKeyCustomerCompany_Header") as Label;
                     //string sCustomerCompany_Edit1 = lLabel2_Edit1.Text;

                     ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

                        ClsLoadFieldHelper.fAddSqlParameter("@SystemCode", this.ClsHashTableHelper.mClassMyConfiguration.msSystemCode);
                        ClsLoadFieldHelper.fAddSqlParameter("@Search", sKey_Edit1);
                        ClsLoadFieldHelper.fAddSqlParameter("@action", "Get");
                        ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_GridDetail");

                     this.txtPostCode.Text = sKey_Edit1;
                     this.txtPostCode.Enabled = false;


                     ClsLoadFieldHelper.LoadSqlField("Subject", ref txtSubject);
                     ClsLoadFieldHelper.LoadSqlField("Date", ref DPDate);
                     ClsLoadFieldHelper.LoadSqlField("SuperUser", ref txtSuperUser);
                     ClsLoadFieldHelper.LoadSqlField("Distribution", ref txtDistribution);
                     ClsLoadFieldHelper.LoadSqlField("Detail", ref txtDetail);
                     ClsLoadFieldHelper.LoadSqlField("FolderCode", ref  ddlFolderCode_edit);
                     ClsLoadFieldHelper.LoadSqlField("Remark", ref  txtRemark);
                     ClsLoadFieldHelper.LoadSqlField("Sorting", ref  txtSorting);
                     ClsLoadFieldHelper.LoadSqlField("URL", ref  txtURL);
                     ClsLoadFieldHelper.LoadSqlField("URLTarget", ref  txtURLTarget);
                     ClsLoadFieldHelper.LoadSqlField("OwnerBy", ref  txtOwnerBy);
                     ClsLoadFieldHelper.LoadSqlField("Status", ref  ddlInfoStatus_edit);
                    }

                }
                break;
         
        }
    }


    protected void btnClose_Info_Click(object sender, EventArgs e)
    {
        this.divPopUpPanel.Visible = false;
        this.divCoverLayer.Visible = false;
       // FillGridView1();
        clearEditFields();
    }

    protected void btnInsert_AddFolder_Click(object sender, EventArgs e)
    {
        //if (bCanHaveRight("", "Add"))
        {
            this.Label6.Text = "Add Post";
            this.btnUpdate_Info.Text = "Add";
            this.txtPostCode.Enabled = true;
            this.div_ProfileStatus_edit.Visible = false;
            this.divPopUpPanel.Visible = true;
            this.divCoverLayer.Visible = true;
        }
    }


    protected void btnUpdate_Info_Click(object sender, EventArgs e)
    {
        ClassLoadFieldHelper ClsLoadFieldHelper = new ClassLoadFieldHelper();

        ClsLoadFieldHelper.fAddSqlParameter("@PostCode", this.txtPostCode.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Subject", this.txtSubject.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Date", this.DPDate.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@SuperUser", this.txtSuperUser.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@OwnerBy", this.txtOwnerBy.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@FolderCode", this.ddlFolderCode_edit.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Distribution", this.txtDistribution.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Detail", this.txtDetail.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Remark", this.txtRemark.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@Sorting", this.txtSorting.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@URL", this.txtURL.Text);
        ClsLoadFieldHelper.fAddSqlParameter("@URLTarget", this.txtURLTarget.Text);

        ClsLoadFieldHelper.fAddSqlParameter("@UpdateBy", this.ClsHashTableHelper.msUserName);


        if (this.txtPostCode.Enabled == true)
        {
            ClsLoadFieldHelper.fAddSqlParameter("@Status", "Active");
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_insert");
        }
        else
        {
            ClsLoadFieldHelper.fAddSqlParameter("@Status", this.ddlInfoStatus_edit.Text);
            ClsLoadFieldHelper.fBuildDataSet("stp_wf_all_Config_FolderPost_update");
        }

        if (ClsLoadFieldHelper.mbDataSetHasRecord)
        {
            lblAlert3.Visible = true;
            lblAlert3.Text = ClsLoadFieldHelper.oLoadSqlField("Result").ToString();
        }
        else
        {            
            FillGridView1();
            this.divPopUpPanel.Visible = false;
            this.divCoverLayer.Visible = false;
            clearEditFields();
        }
    }
    
    private object clearEditFields()
    {
        txtPostCode.Text = "";
        txtSubject.Text = "";
        DPDate.Text = "";
        txtSuperUser.Text = "";
        txtOwnerBy.Text = "";
        txtDistribution.Text = "";
        txtDetail.Text = "";
        txtRemark.Text = "";
        txtSorting.Text = "";
        ddlInfoStatus_edit.Text = "";
        txtURLTarget.Text = "";
        txtURL.Text = "";
        txtOwnerBy.Text = "";

        lblAlert3.Visible = false;
        lblAlert3.Text = "";

        return null;
    }

    protected void ddlFolderCode_SelectedIndexChanged(object sender, EventArgs e)
    {
        FillGridView1();
    }
}